apply plugin: 'com.android.library'
android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        classpath 'com.zhangshuo.plugin:AutoPlugin:1.0.0'
    }
}
apply plugin: 'injectplugin'

//afterEvaluate {
//    getTasks().all { tsk ->
//        if (tsk.name.endsWith("Resources")
//                && tsk.name.startsWith("process")
//                && !tsk.name.contains('AndroidTest')) {
//            def buildType = tsk.name.replace("process", "").replace("Resources", "")
//            def taskK = task("build" + buildType + "M", dependsOn: tsk) {}
//            tsk.outputs.files.each {
//                if (it.absolutePath.contains('generated/source/r')) {
//                    taskK.outputs.file(it.absolutePath)
//                }
//                if (it.absolutePath.contains('intermediates/symbols')
//                        ||  it.absolutePath.contains('intermediates/bundles/')) {
//                    taskK.inputs.file(it.absolutePath)
//                }
//            }
//            taskK.doLast {
//                GenerateK.autoGenerateR(project, taskK)
//            }
//            tsk.doLast {
//                GenerateK.autoGenerateR(project, taskK)
//            }
//        }
//    }
//}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    annotationProcessor project(':zcompiler')
    implementation project(':zapi')
}
